# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Vincent
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Vincent Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 18:43+0800\n"
"PO-Revision-Date: 2021-05-29 08:33+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../2.12_servo.rst:2
msgid "2.12 Servo"
msgstr "2.12 Servo"

#: ../2.12_servo.rst:5
msgid "Overview"
msgstr "Überblick"

#: ../2.12_servo.rst:7
msgid ""
"In this lesson, you will learn something about Servo. Servo is a kind of "
"driver whose position (angular) can be adjustable and kept or a rotary "
"actuator that allows for precise control of angular position. Currently, "
"it is widely used in upscale remote control toys, such as airplane, "
"submarine, telerobot and so on."
msgstr ""
"In this course, you will learn about servo. Servo is a drive whose "
"position (angle) can be adjusted and maintained, or a rotary actuator "
"that can precisely control the angular position. Derzeit wird es häufig "
"in hochwertigen ferngesteuerten Spielzeugen wie Flugzeugen, U-Booten, "
"Telerobotern usw. verwendet."

#: ../2.12_servo.rst:14
msgid "Components Required"
msgstr "Erforderliche Komponenten"

#: ../2.12_servo.rst:19
msgid "Component Introduction"
msgstr "Komponenteneinführung"

#: ../2.12_servo.rst:23
msgid ""
"A servo is generally composed of the following parts: case, shaft, gear "
"system, potentiometer, DC motor, and embedded board."
msgstr ""
"Ein Servo besteht im Allgemeinen aus folgenden Teilen: Gehäuse, Welle, "
"Getriebe, Potentiometer, Gleichstrommotor und eingebettete Platine."

#: ../2.12_servo.rst:26
msgid ""
"It works like this: The microcontroller sends out PWM signals to the "
"servo, and then the embedded board in the servo receives the signals "
"through the signal pin and controls the motor inside to turn. As a "
"result, the motor drives the gear system and then motivates the shaft "
"after deceleration. The shaft and potentiometer of the servo are "
"connected together. When the shaft rotates, it drives the potentiometer, "
"so the potentiometer outputs a voltage signal to the embedded board. Then "
"the board determines the direction and speed of rotation based on the "
"current position, so it can stop exactly at the right position as defined "
"and hold there."
msgstr ""
"Das funktioniert so: Der Mikrocontroller sendet das PWM-Signal an den "
"Server, und dann empfängt die im Server eingebettete Karte das Signal "
"über den Signalstift und steuert die Drehung des internen Motors. "
"Infolgedessen treibt der Motor das Getriebesystem an und motiviert dann "
"die Welle nach dem Abbremsen. Die Welle und das Potentiometer des Servos "
"sind miteinander verbunden. Wenn sich die Welle dreht, treibt sie das "
"Potentiometer an, sodass das Potentiometer ein Spannungssignal an die "
"eingebettete Platine ausgibt. Dann bestimmt das Board die Drehrichtung "
"und -geschwindigkeit basierend auf der aktuellen Position, sodass es "
"genau an der richtigen Position wie definiert anhalten und dort halten "
"kann."

#: ../2.12_servo.rst:39
msgid ""
"The angle is determined by the duration of a pulse that is applied to the "
"control wire. This is called Pulse width Modulation. The servo expects to "
"see a pulse every 20 ms. The length of the pulse will determine how far "
"the motor turns. For example, a 1.5ms pulse will make the motor turn to "
"the 90 degree position (neutral position)."
msgstr ""
"Der Winkel wird durch die Dauer eines Impulses bestimmt, der an den "
"Steuerdraht angelegt wird. Dies wird als Pulsweitenmodulation bezeichnet. "
"Das Servo erwartet alle 20 ms einen Impuls. Die Länge des Impulses "
"bestimmt, wie weit sich der Motor dreht. Zum Beispiel bringt ein Impuls "
"von 1.5 ms den Motor in die 90-Grad-Position (neutrale Position)."

#: ../2.12_servo.rst:45
msgid ""
"When a pulse is sent to a servo that is less than 1.5 ms, the servo "
"rotates to a position and holds its output shaft some number of degrees "
"counterclockwise from the neutral point."
msgstr ""
"Wenn der an das Servo gesendete Impuls weniger als 1.5 ms beträgt, dreht "
"sich das Servo in eine Position und hält seine Abtriebswelle in einem "
"bestimmten Winkel gegen den Uhrzeigersinn vom Neutralpunkt."

#: ../2.12_servo.rst:49
msgid ""
"When the pulse is wider than 1.5 ms the opposite occurs. The minimal "
"width and the maximum width of pulse that will command the servo to turn "
"to a valid position are functions of each servo. Generally the minimum "
"pulse will be about 0.5 ms wide and the maximum pulse will be 2.5 ms wide."
msgstr ""
"Wenn der Impuls breiter als 1.5 ms ist, tritt das Gegenteil auf. Die "
"minimale Breite und die maximale Impulsbreite, die das Servo anweisen, "
"sich in eine gültige Position zu drehen, sind Funktionen jedes Servos. Im "
"Allgemeinen ist der minimale Impuls ungefähr 0.5 ms breit und der "
"maximale Impuls ist 2.5 ms breit."

#: ../2.12_servo.rst:59
msgid "Fritzing Circuit"
msgstr "Fritzing Circuit"

#: ../2.12_servo.rst:61
msgid ""
"In this example, we use PWM pin 9 to drive the Servo, and get the orange "
"wire of the servo connected to the PWM pin 9, the red one to 5V, and the "
"brown one to GND."
msgstr ""
"In diesem Beispiel verwenden wir den PWM-Pin 9, um den Servo anzusteuern, "
"und verbinden den orangefarbenen Draht des Servos mit dem PWM-Pin 9, den "
"roten mit 5 V und den braunen mit GND."

#: ../2.12_servo.rst:68
msgid "Schematic Diagram"
msgstr "Schematische Darstellung"

#: ../2.12_servo.rst:74
msgid "Code"
msgstr "Code"

#: ../2.12_servo.rst:80
msgid ""
"Once you finish uploading the codes to the Mega2560 board, you can see "
"the servo arm rotating in the range 0°~180°."
msgstr ""
"Sobald Sie die Codes auf die Mega2560-Karte hochgeladen haben, können Sie "
"sehen, wie sich der Servoarm im Bereich von 0 ° bis 180 ° dreht."

#: ../2.12_servo.rst:83
msgid "Code Analysis"
msgstr "Code-Analyse"

#: ../2.12_servo.rst:85
msgid "By calling the library Servo.h, you can drive the servo easily."
msgstr ""
"Durch Aufrufen der Bibliothek Servo.h können Sie das Servo problemlos "
"fahren."

#: ../2.12_servo.rst:91
msgid "**Library Functions：**"
msgstr "**Bibliotheksfunktionen:**"

#: ../2.12_servo.rst:97
msgid "Create **Servo** object to control a servo."
msgstr "Erstellen Sie ein **Servo**-Objekt, um ein Servo zu steuern."

#: ../2.12_servo.rst:103
msgid "Turn a pin into a servo driver. Calls pinMode. Returns 0 on failure."
msgstr ""
"Verwandeln Sie einen Stift in einen Servotreiber. Ruft pinMode auf. Gibt "
"bei einem Fehler 0 zurück."

#: ../2.12_servo.rst:109
msgid "Release a pin from servo driving."
msgstr "Lösen Sie einen Stift vom Servoantrieb."

#: ../2.12_servo.rst:115
msgid "Set the angle of the servo in degrees, 0 to 180."
msgstr "Stellen Sie den Winkel des Servos in Grad von 0 bis 180 ein."

#: ../2.12_servo.rst:121
msgid "Return that value set with the last write()."
msgstr "Gibt den mit dem letzten eingestellten Wert zurück."

#: ../2.12_servo.rst:127
msgid "Return 1 if the servo is currently attached."
msgstr "Geben Sie 1 zurück, wenn das Servo gerade angeschlossen ist."

#: ../2.12_servo.rst:130
msgid "Phenomenon Picture"
msgstr "Phänomen Bild"
