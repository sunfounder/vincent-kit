# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Vincent
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Vincent Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 18:43+0800\n"
"PO-Revision-Date: 2021-05-29 08:05+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../2.6_74hc595.rst:2
msgid "2.6 74HC595"
msgstr "2.6 74HC595"

#: ../2.6_74hc595.rst:5
msgid "Overview"
msgstr "Überblick"

#: ../2.6_74hc595.rst:7
msgid ""
"In this lesson, you will learn how to use 74HC595. 74HC595 consists of "
"an 8−bit shift register and a storage register with three−state parallel "
"outputs. It converts serial input into parallel output so you can save "
"IO ports of an MCU."
msgstr ""
"In diesem Kurs lernen Sie die Verwendung von 74HC595. 74HC595 besteht "
"aus einem 8-Bit-Schieberegister und einem Speicherregister mit "
"parallelem Ausgang mit drei Zuständen. Es wandelt den seriellen Eingang "
"in den parallelen Ausgang um, sodass Sie den E / A-Port der MCU "
"speichern können."

#: ../2.6_74hc595.rst:13
msgid "Components Required"
msgstr "Erforderliche Komponenten"

#: ../2.6_74hc595.rst:18
msgid "Component Introduction"
msgstr "Komponenteneinführung"

#: ../2.6_74hc595.rst:22
msgid ""
"When MR (pin10) is high level and OE (pin13) is low level, data is input "
"in the rising edge of SHcp and goes to the memory register through the "
"rising edge of SHcp. If the two clocks are connected together, the shift "
"register is always one pulse earlier than the memory register. There is "
"a serial shift input pin (Ds), a serial output pin (Q) and an "
"asynchronous reset button (low level) in the memory register. The memory "
"register outputs a Bus with a parallel 8-bit and in three states. When "
"OE is enabled (low level), the data in memory register is output to the "
"bus."
msgstr ""
"Wenn MR (Pin 10) hoch und OE (Pin 13) niedrig ist, werden Daten an der "
"ansteigenden Flanke von SHcp eingegeben und gelangen über die "
"ansteigende Flanke von SHcp in das Speicherregister. Wenn die beiden "
"Takte miteinander verbunden sind, ist das Schieberegister immer einen "
"Impuls früher als das Speicherregister. Im Speicherregister befinden "
"sich ein serieller Shift-Eingangspin (Ds), ein serieller Ausgangspin (Q) "
"und eine asynchrone Reset-Taste (niedriger Pegel). Das Speicherregister "
"gibt einen Bus mit einem parallelen 8-Bit und in drei Zuständen aus. "
"Wenn OE aktiviert ist (niedriger Pegel), werden die Daten im "
"Speicherregister an den Bus ausgegeben."

#: ../2.6_74hc595.rst:32
msgid "**Pins of 74HC595 and their functions**:"
msgstr "**Pins von 74HC595 und ihre Funktionen**:"

#: ../2.6_74hc595.rst:34
msgid ""
"**Q0-Q7**: 8-bit parallel data output pins, able to control 8 LEDs or 8 "
"pins of 7-segment display directly."
msgstr ""
"**Q0-Q7**: Parallele 8-Bit-Datenausgangspins, mit denen 8 LEDs oder 8 "
"Pins der 7-Segment-Anzeige direkt gesteuert werden können."

#: ../2.6_74hc595.rst:37
msgid ""
"**Q7’**: Series output pin, connected to DS of another 74HC595 to "
"connect multiple 74HC595s in series"
msgstr ""
"**Q7 '**: Serienausgangspin, verbunden mit DS eines anderen 74HC595, um "
"mehrere 74HC595 in Reihe zu schalten"

#: ../2.6_74hc595.rst:40
msgid "**MR**: Reset pin, active at low level;"
msgstr "**MR**: Reset-Pin, auf niedrigem Pegel aktiv;"

#: ../2.6_74hc595.rst:42
msgid ""
"**SHcp**: Time sequence input of shift register. On the rising edge, the "
"data in shift register moves successively one bit, i.e. data in Q1 moves "
"to Q2, and so forth. While on the falling edge, the data in shift "
"register remain unchanged."
msgstr ""
"**SHcp**: Zeitsequenz-Eingabe des Schieberegisters. Bei der ansteigenden "
"Flanke bewegen sich die Daten im Schieberegister kontinuierlich um ein "
"Bit, dh die Daten in Q1 bewegen sich zu Q2 und so weiter. Während der "
"fallenden Flanke bleiben die Daten im Schieberegister unverändert."

#: ../2.6_74hc595.rst:47
msgid ""
"**STcp**: Time sequence input of storage register. On the rising edge, "
"data in the shift register moves into memory register."
msgstr ""
"**STcp**: Zeitsequenz-Eingabe des Speicherregisters. Bei steigender "
"Flanke werden Daten im Schieberegister in das Speicherregister "
"verschoben."

#: ../2.6_74hc595.rst:50
msgid "**OE**: Output enable pin, active at low level."
msgstr "**OE**: Ausgangsfreigabepin, aktiv auf niedrigem Pegel."

#: ../2.6_74hc595.rst:52
msgid "**DS**: Serial data input pin"
msgstr "**DS**: Serieller Dateneingangspin"

#: ../2.6_74hc595.rst:54
msgid "**VCC**: Positive supply voltage"
msgstr "**VCC**: Positive Versorgungsspannung"

#: ../2.6_74hc595.rst:56
msgid "**GND**: Ground"
msgstr "**GND**: Boden"

#: ../2.6_74hc595.rst:59
msgid "Fritzing Circuit"
msgstr "Fritzing Circuit"

#: ../2.6_74hc595.rst:63
msgid ""
"In this example, we use 74HC595 to control LED. Give each data output "
"pin（Q0-Q7）a 220 ohm resistor then connect them to LED. The wiring "
"diagram is as follows:"
msgstr ""
"In diesem Beispiel verwenden wir 74HC595 zur Steuerung der LED. Geben "
"Sie jedem Datenausgangspin （Q0-Q7） einen 220-Ohm-Widerstand und "
"verbinden Sie ihn dann mit der LED. Der Schaltplan lautet wie folgt:"

#: ../2.6_74hc595.rst:70
msgid "Schematic Diagram"
msgstr "Schematische Darstellung"

#: ../2.6_74hc595.rst:75
msgid "Code"
msgstr "Code"

#: ../2.6_74hc595.rst:81
msgid ""
"When you finish uploading the codes to the Mega2560 board, you can see "
"the LEDs turning on one after another."
msgstr ""
"Wenn Sie die Codes auf die Mega2560-Karte hochgeladen haben, leuchten "
"die LEDs nacheinander auf."

#: ../2.6_74hc595.rst:84
msgid "Code Analysis"
msgstr "Code-Analyse"

#: ../2.6_74hc595.rst:86
msgid ""
"Declare an array, store several 8 bit binary numbers that are used to "
"change the working state of the eight LEDs controlled by 74HC595."
msgstr ""
"Deklarieren Sie ein Array und speichern Sie mehrere 8-Bit-Binärzahlen, "
"mit denen der Arbeitszustand der acht von 74HC595 gesteuerten LEDs "
"geändert wird."

#: ../2.6_74hc595.rst:92
msgid ""
"Set STcp to low level first and then high level. It will generate a "
"rising edge pulse of STcp."
msgstr ""
"Stellen Sie STcp zuerst auf niedrigen und dann auf hohen Pegel ein. Es "
"wird ein Anstiegsflankenimpuls von STcp erzeugt."

#: ../2.6_74hc595.rst:98
msgid ""
"shiftOut() is used to shift out a byte of data one bit at a time, which "
"means to shift a byte of data in datArray[num] to the shifting register "
"with the DS pin. MSBFIRST means to move from high bits."
msgstr ""
"Mit shiftOut () wird ein Datenbyte bitweise verschoben, dh ein Datenbyte "
"in datArray [num] wird mit dem DS-Pin in das Schieberegister verschoben. "
"MSBFIRST bedeutet, sich von hohen Bits zu bewegen."

#: ../2.6_74hc595.rst:104
msgid ""
"After digitalWrite(STcp,HIGH) is run, the STcp will be at the rising "
"edge. At this time, the data in the shift register will be moved to the "
"memory register."
msgstr ""
"Nachdem digitalWrite (STcp, HIGH) ausgeführt wurde, befindet sich STcp "
"an der ansteigenden Flanke. Zu diesem Zeitpunkt werden die Daten im "
"Schieberegister in das Speicherregister verschoben."

#: ../2.6_74hc595.rst:110
msgid ""
"A byte of data will be transferred into the memory register after 8 "
"times. Then the data of memory register are output to the bus (Q0-Q7). "
"For example, shiftout「B00000001」will light up the LED controlled by Q0 "
"and turn off the LED controlled by Q1~Q7."
msgstr ""
"Ein Datenbyte wird nach 8 Mal in das Speicherregister übertragen. Dann "
"werden die Daten des Speicherregisters an den Bus (Q0-Q7) ausgegeben. "
"Zum Beispiel leuchtet durch Ausschalten (B00000001) die von Q0 "
"gesteuerte LED auf und schaltet die von Q1 bis Q7 gesteuerte LED aus."

#: ../2.6_74hc595.rst:113
msgid "Phenomenon Picture"
msgstr "Phänomen Bild"
