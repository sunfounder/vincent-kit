# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Vincent Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Vincent Kit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 17:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../2.6_74hc595.rst:2
msgid "2.6 74HC595"
msgstr ""

#: ../2.6_74hc595.rst:5
msgid "Overview"
msgstr ""

#: ../2.6_74hc595.rst:7
msgid "In this lesson, you will learn how to use 74HC595. 74HC595 consists of an 8−bit shift register and a storage register with three−state parallel outputs. It converts serial input into parallel output so you can save IO ports of an MCU."
msgstr ""

#: ../2.6_74hc595.rst:13
msgid "Components Required"
msgstr ""

#: ../2.6_74hc595.rst:18
msgid "Component Introduction"
msgstr ""

#: ../2.6_74hc595.rst:22
msgid "When MR (pin10) is high level and OE (pin13) is low level, data is input in the rising edge of SHcp and goes to the memory register through the rising edge of SHcp. If the two clocks are connected together, the shift register is always one pulse earlier than the memory register. There is a serial shift input pin (Ds), a serial output pin (Q) and an asynchronous reset button (low level) in the memory register. The memory register outputs a Bus with a parallel 8-bit and in three states. When OE is enabled (low level), the data in memory register is output to the bus."
msgstr ""

#: ../2.6_74hc595.rst:32
msgid "**Pins of 74HC595 and their functions**:"
msgstr ""

#: ../2.6_74hc595.rst:34
msgid "**Q0-Q7**: 8-bit parallel data output pins, able to control 8 LEDs or 8 pins of 7-segment display directly."
msgstr ""

#: ../2.6_74hc595.rst:37
msgid "**Q7’**: Series output pin, connected to DS of another 74HC595 to connect multiple 74HC595s in series"
msgstr ""

#: ../2.6_74hc595.rst:40
msgid "**MR**: Reset pin, active at low level;"
msgstr ""

#: ../2.6_74hc595.rst:42
msgid "**SHcp**: Time sequence input of shift register. On the rising edge, the data in shift register moves successively one bit, i.e. data in Q1 moves to Q2, and so forth. While on the falling edge, the data in shift register remain unchanged."
msgstr ""

#: ../2.6_74hc595.rst:47
msgid "**STcp**: Time sequence input of storage register. On the rising edge, data in the shift register moves into memory register."
msgstr ""

#: ../2.6_74hc595.rst:50
msgid "**OE**: Output enable pin, active at low level."
msgstr ""

#: ../2.6_74hc595.rst:52
msgid "**DS**: Serial data input pin"
msgstr ""

#: ../2.6_74hc595.rst:54
msgid "**VCC**: Positive supply voltage"
msgstr ""

#: ../2.6_74hc595.rst:56
msgid "**GND**: Ground"
msgstr ""

#: ../2.6_74hc595.rst:59
msgid "Fritzing Circuit"
msgstr ""

#: ../2.6_74hc595.rst:63
msgid "In this example, we use 74HC595 to control LED. Give each data output pin（Q0-Q7）a 220 ohm resistor then connect them to LED. The wiring diagram is as follows:"
msgstr ""

#: ../2.6_74hc595.rst:70
msgid "Schematic Diagram"
msgstr ""

#: ../2.6_74hc595.rst:75
msgid "Code"
msgstr ""

#: ../2.6_74hc595.rst:81
msgid "When you finish uploading the codes to the Mega2560 board, you can see the LEDs turning on one after another."
msgstr ""

#: ../2.6_74hc595.rst:84
msgid "Code Analysis"
msgstr ""

#: ../2.6_74hc595.rst:86
msgid "Declare an array, store several 8 bit binary numbers that are used to change the working state of the eight LEDs controlled by 74HC595."
msgstr ""

#: ../2.6_74hc595.rst:92
msgid "Set STcp to low level first and then high level. It will generate a rising edge pulse of STcp."
msgstr ""

#: ../2.6_74hc595.rst:98
msgid "shiftOut() is used to shift out a byte of data one bit at a time, which means to shift a byte of data in datArray[num] to the shifting register with the DS pin. MSBFIRST means to move from high bits."
msgstr ""

#: ../2.6_74hc595.rst:104
msgid "After digitalWrite(STcp,HIGH) is run, the STcp will be at the rising edge. At this time, the data in the shift register will be moved to the memory register."
msgstr ""

#: ../2.6_74hc595.rst:110
msgid "A byte of data will be transferred into the memory register after 8 times. Then the data of memory register are output to the bus (Q0-Q7). For example, shiftout「B00000001」will light up the LED controlled by Q0 and turn off the LED controlled by Q1~Q7."
msgstr ""

#: ../2.6_74hc595.rst:113
msgid "Phenomenon Picture"
msgstr ""
